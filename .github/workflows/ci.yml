name: ci
on:
  push:
  pull_request:
  schedule:
  - cron: '0 7 * * *'
jobs:
  test:
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "format"
            java: 8
            os: ubuntu-latest
          - name: "inspector"
            java: 17
            os: ubuntu-latest
          - name: "test-cross"
            test_index: 0
            java: 8
            os: ubuntu-latest
          - name: "test-cross"
            test_index: 1
            java: 8
            os: ubuntu-latest
          - name: "test-cross"
            test_index: 2
            java: 8
            os: ubuntu-latest
          - name: "scripted"
            java: 8
            os: ubuntu-latest
            test_index: 1
          - name: "scripted"
            java: 8
            os: ubuntu-latest
            test_index: 2
          - name: "scripted"
            java: 8
            os: ubuntu-latest
            test_index: 3
          - name: "test"
            java: 11
            os: ubuntu-latest
          - name: "test"
            java: 17
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-java@v3
      with:
        java-version: ${{matrix.java}}
        distribution: temurin
    - uses: actions/checkout@v4
    - uses: coursier/cache-action@v6
    - shell: bash
      run: |
        case ${{ matrix.name }} in
          "format")
            sbt -v scalafmtSbt "+ scalafmtAll"
            git diff --exit-code
            ;;
          "test-cross")
            sbt -v "project core" "testPartial 3 ${{matrix.test_index}}"
            ;;
          "scripted")
            sbt -v "+ publishLocal" "sbt-plugin/scripted wartremover/*${{matrix.test_index}}of3"
            ;;
          "inspector")
            sbt -v SetLatestStableScala3 inspector/test
            ;;
          "test")
            sbt -v test
            ;;
          *)
            echo "unknown job"
            exit 1
        esac
    - if: ${{ (github.event_name == 'pull_request') && failure() && matrix.name == 'format' }}
      run: |
        REVIEWDOG_VERSION="0.14.1"
        FILE_NAME="reviewdog_${REVIEWDOG_VERSION}_Linux_x86_64"
        wget -q https://github.com/reviewdog/reviewdog/releases/download/v${REVIEWDOG_VERSION}/${FILE_NAME}.tar.gz &&
        gunzip ${FILE_NAME}.tar.gz &&
        tar -xf ${FILE_NAME}.tar &&
        chmod +x ./reviewdog &&
        ./reviewdog -version
        export REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }}
        TMPFILE=$(mktemp)
        git diff > "${TMPFILE}"
        ./reviewdog \
          -name="scalafmt" \
          -f=diff \
          -f.diff.strip=1 \
          -reporter="github-pr-review" \
          -filter-mode="diff_context" \
          -fail-on-error="false" \
          -level="warning" <"${TMPFILE}"
    - shell: bash
      run: rm -rf "$HOME/.ivy2/local" || true
